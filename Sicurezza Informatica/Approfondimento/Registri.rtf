{\rtf1\ansi\ansicpg1252\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs28 \cf0 Registri\
\
EIP -> rappresenta la locazione di memoria dell\'92instractor point, ovvero \'e8 l\'92indirizzo di memoria della prossima istruzione che dovr\'e0 essere inserita. \'c9 un puntatore all\'92istruzione successiva.\
\
ESP -> parte pi\'f9 alta dello stack, contiene l\'92indirizzo della cima dello stack \
\
JMP ESP -> \'e8 l\'92istruzione che salter\'e0 all\'92ESP in qualunque punto della memoria\
\
Se abbiamo il controllo dell\'92EIP, quindi il puntatore all\'92istruzione successiva e mettiamo l\'92indirizzo dell JMP ESP all\'92 interno dell\'92EIP, forziamo il programma ad andare immediatamente all\'92ESP.\
\
Quindi nell\'92ESP metteremo il nostro shellcode}